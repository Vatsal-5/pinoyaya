/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as ProtectedImport } from './routes/_protected'
import { Route as IndexImport } from './routes/index'
import { Route as ProtectedUserManagementImport } from './routes/_protected/user-management'
import { Route as ProtectedPaymentManagementImport } from './routes/_protected/payment-management'
import { Route as ProtectedJobPostManagementImport } from './routes/_protected/job-post-management'
import { Route as ProtectedDisputeResolutionImport } from './routes/_protected/dispute-resolution'
import { Route as ProtectedDashboardImport } from './routes/_protected/dashboard'
import { Route as authLoginImport } from './routes/(auth)/login'
import { Route as authForgotPasswordImport } from './routes/(auth)/forgot-password'
import { Route as ProtectedSettingsSubscriptionSettingsImport } from './routes/_protected/settings/subscription-settings'
import { Route as ProtectedSettingsReviewsImport } from './routes/_protected/settings/reviews'
import { Route as ProtectedSettingsAdminRolesImport } from './routes/_protected/settings/admin-roles'
import { Route as ProtectedSettingsAdminActivityImport } from './routes/_protected/settings/admin-activity'
import { Route as ProtectedNotificationManagementTemplatesImport } from './routes/_protected/notification-management/templates'
import { Route as ProtectedNotificationManagementNotificationsImport } from './routes/_protected/notification-management/notifications'
import { Route as ProtectedContentManagementTrustAndSafetyImport } from './routes/_protected/content-management/trust-and-safety'
import { Route as ProtectedContentManagementTermsAndConditionsImport } from './routes/_protected/content-management/terms-and-conditions'
import { Route as ProtectedContentManagementPrivacyPolicyImport } from './routes/_protected/content-management/privacy-policy'
import { Route as ProtectedContentManagementFaqsImport } from './routes/_protected/content-management/faqs'
import { Route as ProtectedAnalyticsAndReportingUserBehaviorImport } from './routes/_protected/analytics-and-reporting/user-behavior'
import { Route as ProtectedAnalyticsAndReportingJobAnalyticsImport } from './routes/_protected/analytics-and-reporting/job-analytics'
import { Route as ProtectedAnalyticsAndReportingFinancialReportsImport } from './routes/_protected/analytics-and-reporting/financial-reports'

// Create/Update Routes

const ProtectedRoute = ProtectedImport.update({
  id: '/_protected',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const ProtectedUserManagementRoute = ProtectedUserManagementImport.update({
  id: '/user-management',
  path: '/user-management',
  getParentRoute: () => ProtectedRoute,
} as any)

const ProtectedPaymentManagementRoute = ProtectedPaymentManagementImport.update(
  {
    id: '/payment-management',
    path: '/payment-management',
    getParentRoute: () => ProtectedRoute,
  } as any,
)

const ProtectedJobPostManagementRoute = ProtectedJobPostManagementImport.update(
  {
    id: '/job-post-management',
    path: '/job-post-management',
    getParentRoute: () => ProtectedRoute,
  } as any,
)

const ProtectedDisputeResolutionRoute = ProtectedDisputeResolutionImport.update(
  {
    id: '/dispute-resolution',
    path: '/dispute-resolution',
    getParentRoute: () => ProtectedRoute,
  } as any,
)

const ProtectedDashboardRoute = ProtectedDashboardImport.update({
  id: '/dashboard',
  path: '/dashboard',
  getParentRoute: () => ProtectedRoute,
} as any)

const authLoginRoute = authLoginImport.update({
  id: '/(auth)/login',
  path: '/login',
  getParentRoute: () => rootRoute,
} as any)

const authForgotPasswordRoute = authForgotPasswordImport.update({
  id: '/(auth)/forgot-password',
  path: '/forgot-password',
  getParentRoute: () => rootRoute,
} as any)

const ProtectedSettingsSubscriptionSettingsRoute =
  ProtectedSettingsSubscriptionSettingsImport.update({
    id: '/settings/subscription-settings',
    path: '/settings/subscription-settings',
    getParentRoute: () => ProtectedRoute,
  } as any)

const ProtectedSettingsReviewsRoute = ProtectedSettingsReviewsImport.update({
  id: '/settings/reviews',
  path: '/settings/reviews',
  getParentRoute: () => ProtectedRoute,
} as any)

const ProtectedSettingsAdminRolesRoute =
  ProtectedSettingsAdminRolesImport.update({
    id: '/settings/admin-roles',
    path: '/settings/admin-roles',
    getParentRoute: () => ProtectedRoute,
  } as any)

const ProtectedSettingsAdminActivityRoute =
  ProtectedSettingsAdminActivityImport.update({
    id: '/settings/admin-activity',
    path: '/settings/admin-activity',
    getParentRoute: () => ProtectedRoute,
  } as any)

const ProtectedNotificationManagementTemplatesRoute =
  ProtectedNotificationManagementTemplatesImport.update({
    id: '/notification-management/templates',
    path: '/notification-management/templates',
    getParentRoute: () => ProtectedRoute,
  } as any)

const ProtectedNotificationManagementNotificationsRoute =
  ProtectedNotificationManagementNotificationsImport.update({
    id: '/notification-management/notifications',
    path: '/notification-management/notifications',
    getParentRoute: () => ProtectedRoute,
  } as any)

const ProtectedContentManagementTrustAndSafetyRoute =
  ProtectedContentManagementTrustAndSafetyImport.update({
    id: '/content-management/trust-and-safety',
    path: '/content-management/trust-and-safety',
    getParentRoute: () => ProtectedRoute,
  } as any)

const ProtectedContentManagementTermsAndConditionsRoute =
  ProtectedContentManagementTermsAndConditionsImport.update({
    id: '/content-management/terms-and-conditions',
    path: '/content-management/terms-and-conditions',
    getParentRoute: () => ProtectedRoute,
  } as any)

const ProtectedContentManagementPrivacyPolicyRoute =
  ProtectedContentManagementPrivacyPolicyImport.update({
    id: '/content-management/privacy-policy',
    path: '/content-management/privacy-policy',
    getParentRoute: () => ProtectedRoute,
  } as any)

const ProtectedContentManagementFaqsRoute =
  ProtectedContentManagementFaqsImport.update({
    id: '/content-management/faqs',
    path: '/content-management/faqs',
    getParentRoute: () => ProtectedRoute,
  } as any)

const ProtectedAnalyticsAndReportingUserBehaviorRoute =
  ProtectedAnalyticsAndReportingUserBehaviorImport.update({
    id: '/analytics-and-reporting/user-behavior',
    path: '/analytics-and-reporting/user-behavior',
    getParentRoute: () => ProtectedRoute,
  } as any)

const ProtectedAnalyticsAndReportingJobAnalyticsRoute =
  ProtectedAnalyticsAndReportingJobAnalyticsImport.update({
    id: '/analytics-and-reporting/job-analytics',
    path: '/analytics-and-reporting/job-analytics',
    getParentRoute: () => ProtectedRoute,
  } as any)

const ProtectedAnalyticsAndReportingFinancialReportsRoute =
  ProtectedAnalyticsAndReportingFinancialReportsImport.update({
    id: '/analytics-and-reporting/financial-reports',
    path: '/analytics-and-reporting/financial-reports',
    getParentRoute: () => ProtectedRoute,
  } as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/_protected': {
      id: '/_protected'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof ProtectedImport
      parentRoute: typeof rootRoute
    }
    '/(auth)/forgot-password': {
      id: '/(auth)/forgot-password'
      path: '/forgot-password'
      fullPath: '/forgot-password'
      preLoaderRoute: typeof authForgotPasswordImport
      parentRoute: typeof rootRoute
    }
    '/(auth)/login': {
      id: '/(auth)/login'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof authLoginImport
      parentRoute: typeof rootRoute
    }
    '/_protected/dashboard': {
      id: '/_protected/dashboard'
      path: '/dashboard'
      fullPath: '/dashboard'
      preLoaderRoute: typeof ProtectedDashboardImport
      parentRoute: typeof ProtectedImport
    }
    '/_protected/dispute-resolution': {
      id: '/_protected/dispute-resolution'
      path: '/dispute-resolution'
      fullPath: '/dispute-resolution'
      preLoaderRoute: typeof ProtectedDisputeResolutionImport
      parentRoute: typeof ProtectedImport
    }
    '/_protected/job-post-management': {
      id: '/_protected/job-post-management'
      path: '/job-post-management'
      fullPath: '/job-post-management'
      preLoaderRoute: typeof ProtectedJobPostManagementImport
      parentRoute: typeof ProtectedImport
    }
    '/_protected/payment-management': {
      id: '/_protected/payment-management'
      path: '/payment-management'
      fullPath: '/payment-management'
      preLoaderRoute: typeof ProtectedPaymentManagementImport
      parentRoute: typeof ProtectedImport
    }
    '/_protected/user-management': {
      id: '/_protected/user-management'
      path: '/user-management'
      fullPath: '/user-management'
      preLoaderRoute: typeof ProtectedUserManagementImport
      parentRoute: typeof ProtectedImport
    }
    '/_protected/analytics-and-reporting/financial-reports': {
      id: '/_protected/analytics-and-reporting/financial-reports'
      path: '/analytics-and-reporting/financial-reports'
      fullPath: '/analytics-and-reporting/financial-reports'
      preLoaderRoute: typeof ProtectedAnalyticsAndReportingFinancialReportsImport
      parentRoute: typeof ProtectedImport
    }
    '/_protected/analytics-and-reporting/job-analytics': {
      id: '/_protected/analytics-and-reporting/job-analytics'
      path: '/analytics-and-reporting/job-analytics'
      fullPath: '/analytics-and-reporting/job-analytics'
      preLoaderRoute: typeof ProtectedAnalyticsAndReportingJobAnalyticsImport
      parentRoute: typeof ProtectedImport
    }
    '/_protected/analytics-and-reporting/user-behavior': {
      id: '/_protected/analytics-and-reporting/user-behavior'
      path: '/analytics-and-reporting/user-behavior'
      fullPath: '/analytics-and-reporting/user-behavior'
      preLoaderRoute: typeof ProtectedAnalyticsAndReportingUserBehaviorImport
      parentRoute: typeof ProtectedImport
    }
    '/_protected/content-management/faqs': {
      id: '/_protected/content-management/faqs'
      path: '/content-management/faqs'
      fullPath: '/content-management/faqs'
      preLoaderRoute: typeof ProtectedContentManagementFaqsImport
      parentRoute: typeof ProtectedImport
    }
    '/_protected/content-management/privacy-policy': {
      id: '/_protected/content-management/privacy-policy'
      path: '/content-management/privacy-policy'
      fullPath: '/content-management/privacy-policy'
      preLoaderRoute: typeof ProtectedContentManagementPrivacyPolicyImport
      parentRoute: typeof ProtectedImport
    }
    '/_protected/content-management/terms-and-conditions': {
      id: '/_protected/content-management/terms-and-conditions'
      path: '/content-management/terms-and-conditions'
      fullPath: '/content-management/terms-and-conditions'
      preLoaderRoute: typeof ProtectedContentManagementTermsAndConditionsImport
      parentRoute: typeof ProtectedImport
    }
    '/_protected/content-management/trust-and-safety': {
      id: '/_protected/content-management/trust-and-safety'
      path: '/content-management/trust-and-safety'
      fullPath: '/content-management/trust-and-safety'
      preLoaderRoute: typeof ProtectedContentManagementTrustAndSafetyImport
      parentRoute: typeof ProtectedImport
    }
    '/_protected/notification-management/notifications': {
      id: '/_protected/notification-management/notifications'
      path: '/notification-management/notifications'
      fullPath: '/notification-management/notifications'
      preLoaderRoute: typeof ProtectedNotificationManagementNotificationsImport
      parentRoute: typeof ProtectedImport
    }
    '/_protected/notification-management/templates': {
      id: '/_protected/notification-management/templates'
      path: '/notification-management/templates'
      fullPath: '/notification-management/templates'
      preLoaderRoute: typeof ProtectedNotificationManagementTemplatesImport
      parentRoute: typeof ProtectedImport
    }
    '/_protected/settings/admin-activity': {
      id: '/_protected/settings/admin-activity'
      path: '/settings/admin-activity'
      fullPath: '/settings/admin-activity'
      preLoaderRoute: typeof ProtectedSettingsAdminActivityImport
      parentRoute: typeof ProtectedImport
    }
    '/_protected/settings/admin-roles': {
      id: '/_protected/settings/admin-roles'
      path: '/settings/admin-roles'
      fullPath: '/settings/admin-roles'
      preLoaderRoute: typeof ProtectedSettingsAdminRolesImport
      parentRoute: typeof ProtectedImport
    }
    '/_protected/settings/reviews': {
      id: '/_protected/settings/reviews'
      path: '/settings/reviews'
      fullPath: '/settings/reviews'
      preLoaderRoute: typeof ProtectedSettingsReviewsImport
      parentRoute: typeof ProtectedImport
    }
    '/_protected/settings/subscription-settings': {
      id: '/_protected/settings/subscription-settings'
      path: '/settings/subscription-settings'
      fullPath: '/settings/subscription-settings'
      preLoaderRoute: typeof ProtectedSettingsSubscriptionSettingsImport
      parentRoute: typeof ProtectedImport
    }
  }
}

// Create and export the route tree

interface ProtectedRouteChildren {
  ProtectedDashboardRoute: typeof ProtectedDashboardRoute
  ProtectedDisputeResolutionRoute: typeof ProtectedDisputeResolutionRoute
  ProtectedJobPostManagementRoute: typeof ProtectedJobPostManagementRoute
  ProtectedPaymentManagementRoute: typeof ProtectedPaymentManagementRoute
  ProtectedUserManagementRoute: typeof ProtectedUserManagementRoute
  ProtectedAnalyticsAndReportingFinancialReportsRoute: typeof ProtectedAnalyticsAndReportingFinancialReportsRoute
  ProtectedAnalyticsAndReportingJobAnalyticsRoute: typeof ProtectedAnalyticsAndReportingJobAnalyticsRoute
  ProtectedAnalyticsAndReportingUserBehaviorRoute: typeof ProtectedAnalyticsAndReportingUserBehaviorRoute
  ProtectedContentManagementFaqsRoute: typeof ProtectedContentManagementFaqsRoute
  ProtectedContentManagementPrivacyPolicyRoute: typeof ProtectedContentManagementPrivacyPolicyRoute
  ProtectedContentManagementTermsAndConditionsRoute: typeof ProtectedContentManagementTermsAndConditionsRoute
  ProtectedContentManagementTrustAndSafetyRoute: typeof ProtectedContentManagementTrustAndSafetyRoute
  ProtectedNotificationManagementNotificationsRoute: typeof ProtectedNotificationManagementNotificationsRoute
  ProtectedNotificationManagementTemplatesRoute: typeof ProtectedNotificationManagementTemplatesRoute
  ProtectedSettingsAdminActivityRoute: typeof ProtectedSettingsAdminActivityRoute
  ProtectedSettingsAdminRolesRoute: typeof ProtectedSettingsAdminRolesRoute
  ProtectedSettingsReviewsRoute: typeof ProtectedSettingsReviewsRoute
  ProtectedSettingsSubscriptionSettingsRoute: typeof ProtectedSettingsSubscriptionSettingsRoute
}

const ProtectedRouteChildren: ProtectedRouteChildren = {
  ProtectedDashboardRoute: ProtectedDashboardRoute,
  ProtectedDisputeResolutionRoute: ProtectedDisputeResolutionRoute,
  ProtectedJobPostManagementRoute: ProtectedJobPostManagementRoute,
  ProtectedPaymentManagementRoute: ProtectedPaymentManagementRoute,
  ProtectedUserManagementRoute: ProtectedUserManagementRoute,
  ProtectedAnalyticsAndReportingFinancialReportsRoute:
    ProtectedAnalyticsAndReportingFinancialReportsRoute,
  ProtectedAnalyticsAndReportingJobAnalyticsRoute:
    ProtectedAnalyticsAndReportingJobAnalyticsRoute,
  ProtectedAnalyticsAndReportingUserBehaviorRoute:
    ProtectedAnalyticsAndReportingUserBehaviorRoute,
  ProtectedContentManagementFaqsRoute: ProtectedContentManagementFaqsRoute,
  ProtectedContentManagementPrivacyPolicyRoute:
    ProtectedContentManagementPrivacyPolicyRoute,
  ProtectedContentManagementTermsAndConditionsRoute:
    ProtectedContentManagementTermsAndConditionsRoute,
  ProtectedContentManagementTrustAndSafetyRoute:
    ProtectedContentManagementTrustAndSafetyRoute,
  ProtectedNotificationManagementNotificationsRoute:
    ProtectedNotificationManagementNotificationsRoute,
  ProtectedNotificationManagementTemplatesRoute:
    ProtectedNotificationManagementTemplatesRoute,
  ProtectedSettingsAdminActivityRoute: ProtectedSettingsAdminActivityRoute,
  ProtectedSettingsAdminRolesRoute: ProtectedSettingsAdminRolesRoute,
  ProtectedSettingsReviewsRoute: ProtectedSettingsReviewsRoute,
  ProtectedSettingsSubscriptionSettingsRoute:
    ProtectedSettingsSubscriptionSettingsRoute,
}

const ProtectedRouteWithChildren = ProtectedRoute._addFileChildren(
  ProtectedRouteChildren,
)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '': typeof ProtectedRouteWithChildren
  '/forgot-password': typeof authForgotPasswordRoute
  '/login': typeof authLoginRoute
  '/dashboard': typeof ProtectedDashboardRoute
  '/dispute-resolution': typeof ProtectedDisputeResolutionRoute
  '/job-post-management': typeof ProtectedJobPostManagementRoute
  '/payment-management': typeof ProtectedPaymentManagementRoute
  '/user-management': typeof ProtectedUserManagementRoute
  '/analytics-and-reporting/financial-reports': typeof ProtectedAnalyticsAndReportingFinancialReportsRoute
  '/analytics-and-reporting/job-analytics': typeof ProtectedAnalyticsAndReportingJobAnalyticsRoute
  '/analytics-and-reporting/user-behavior': typeof ProtectedAnalyticsAndReportingUserBehaviorRoute
  '/content-management/faqs': typeof ProtectedContentManagementFaqsRoute
  '/content-management/privacy-policy': typeof ProtectedContentManagementPrivacyPolicyRoute
  '/content-management/terms-and-conditions': typeof ProtectedContentManagementTermsAndConditionsRoute
  '/content-management/trust-and-safety': typeof ProtectedContentManagementTrustAndSafetyRoute
  '/notification-management/notifications': typeof ProtectedNotificationManagementNotificationsRoute
  '/notification-management/templates': typeof ProtectedNotificationManagementTemplatesRoute
  '/settings/admin-activity': typeof ProtectedSettingsAdminActivityRoute
  '/settings/admin-roles': typeof ProtectedSettingsAdminRolesRoute
  '/settings/reviews': typeof ProtectedSettingsReviewsRoute
  '/settings/subscription-settings': typeof ProtectedSettingsSubscriptionSettingsRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '': typeof ProtectedRouteWithChildren
  '/forgot-password': typeof authForgotPasswordRoute
  '/login': typeof authLoginRoute
  '/dashboard': typeof ProtectedDashboardRoute
  '/dispute-resolution': typeof ProtectedDisputeResolutionRoute
  '/job-post-management': typeof ProtectedJobPostManagementRoute
  '/payment-management': typeof ProtectedPaymentManagementRoute
  '/user-management': typeof ProtectedUserManagementRoute
  '/analytics-and-reporting/financial-reports': typeof ProtectedAnalyticsAndReportingFinancialReportsRoute
  '/analytics-and-reporting/job-analytics': typeof ProtectedAnalyticsAndReportingJobAnalyticsRoute
  '/analytics-and-reporting/user-behavior': typeof ProtectedAnalyticsAndReportingUserBehaviorRoute
  '/content-management/faqs': typeof ProtectedContentManagementFaqsRoute
  '/content-management/privacy-policy': typeof ProtectedContentManagementPrivacyPolicyRoute
  '/content-management/terms-and-conditions': typeof ProtectedContentManagementTermsAndConditionsRoute
  '/content-management/trust-and-safety': typeof ProtectedContentManagementTrustAndSafetyRoute
  '/notification-management/notifications': typeof ProtectedNotificationManagementNotificationsRoute
  '/notification-management/templates': typeof ProtectedNotificationManagementTemplatesRoute
  '/settings/admin-activity': typeof ProtectedSettingsAdminActivityRoute
  '/settings/admin-roles': typeof ProtectedSettingsAdminRolesRoute
  '/settings/reviews': typeof ProtectedSettingsReviewsRoute
  '/settings/subscription-settings': typeof ProtectedSettingsSubscriptionSettingsRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/_protected': typeof ProtectedRouteWithChildren
  '/(auth)/forgot-password': typeof authForgotPasswordRoute
  '/(auth)/login': typeof authLoginRoute
  '/_protected/dashboard': typeof ProtectedDashboardRoute
  '/_protected/dispute-resolution': typeof ProtectedDisputeResolutionRoute
  '/_protected/job-post-management': typeof ProtectedJobPostManagementRoute
  '/_protected/payment-management': typeof ProtectedPaymentManagementRoute
  '/_protected/user-management': typeof ProtectedUserManagementRoute
  '/_protected/analytics-and-reporting/financial-reports': typeof ProtectedAnalyticsAndReportingFinancialReportsRoute
  '/_protected/analytics-and-reporting/job-analytics': typeof ProtectedAnalyticsAndReportingJobAnalyticsRoute
  '/_protected/analytics-and-reporting/user-behavior': typeof ProtectedAnalyticsAndReportingUserBehaviorRoute
  '/_protected/content-management/faqs': typeof ProtectedContentManagementFaqsRoute
  '/_protected/content-management/privacy-policy': typeof ProtectedContentManagementPrivacyPolicyRoute
  '/_protected/content-management/terms-and-conditions': typeof ProtectedContentManagementTermsAndConditionsRoute
  '/_protected/content-management/trust-and-safety': typeof ProtectedContentManagementTrustAndSafetyRoute
  '/_protected/notification-management/notifications': typeof ProtectedNotificationManagementNotificationsRoute
  '/_protected/notification-management/templates': typeof ProtectedNotificationManagementTemplatesRoute
  '/_protected/settings/admin-activity': typeof ProtectedSettingsAdminActivityRoute
  '/_protected/settings/admin-roles': typeof ProtectedSettingsAdminRolesRoute
  '/_protected/settings/reviews': typeof ProtectedSettingsReviewsRoute
  '/_protected/settings/subscription-settings': typeof ProtectedSettingsSubscriptionSettingsRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | ''
    | '/forgot-password'
    | '/login'
    | '/dashboard'
    | '/dispute-resolution'
    | '/job-post-management'
    | '/payment-management'
    | '/user-management'
    | '/analytics-and-reporting/financial-reports'
    | '/analytics-and-reporting/job-analytics'
    | '/analytics-and-reporting/user-behavior'
    | '/content-management/faqs'
    | '/content-management/privacy-policy'
    | '/content-management/terms-and-conditions'
    | '/content-management/trust-and-safety'
    | '/notification-management/notifications'
    | '/notification-management/templates'
    | '/settings/admin-activity'
    | '/settings/admin-roles'
    | '/settings/reviews'
    | '/settings/subscription-settings'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | ''
    | '/forgot-password'
    | '/login'
    | '/dashboard'
    | '/dispute-resolution'
    | '/job-post-management'
    | '/payment-management'
    | '/user-management'
    | '/analytics-and-reporting/financial-reports'
    | '/analytics-and-reporting/job-analytics'
    | '/analytics-and-reporting/user-behavior'
    | '/content-management/faqs'
    | '/content-management/privacy-policy'
    | '/content-management/terms-and-conditions'
    | '/content-management/trust-and-safety'
    | '/notification-management/notifications'
    | '/notification-management/templates'
    | '/settings/admin-activity'
    | '/settings/admin-roles'
    | '/settings/reviews'
    | '/settings/subscription-settings'
  id:
    | '__root__'
    | '/'
    | '/_protected'
    | '/(auth)/forgot-password'
    | '/(auth)/login'
    | '/_protected/dashboard'
    | '/_protected/dispute-resolution'
    | '/_protected/job-post-management'
    | '/_protected/payment-management'
    | '/_protected/user-management'
    | '/_protected/analytics-and-reporting/financial-reports'
    | '/_protected/analytics-and-reporting/job-analytics'
    | '/_protected/analytics-and-reporting/user-behavior'
    | '/_protected/content-management/faqs'
    | '/_protected/content-management/privacy-policy'
    | '/_protected/content-management/terms-and-conditions'
    | '/_protected/content-management/trust-and-safety'
    | '/_protected/notification-management/notifications'
    | '/_protected/notification-management/templates'
    | '/_protected/settings/admin-activity'
    | '/_protected/settings/admin-roles'
    | '/_protected/settings/reviews'
    | '/_protected/settings/subscription-settings'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  ProtectedRoute: typeof ProtectedRouteWithChildren
  authForgotPasswordRoute: typeof authForgotPasswordRoute
  authLoginRoute: typeof authLoginRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  ProtectedRoute: ProtectedRouteWithChildren,
  authForgotPasswordRoute: authForgotPasswordRoute,
  authLoginRoute: authLoginRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.jsx",
      "children": [
        "/",
        "/_protected",
        "/(auth)/forgot-password",
        "/(auth)/login"
      ]
    },
    "/": {
      "filePath": "index.jsx"
    },
    "/_protected": {
      "filePath": "_protected.jsx",
      "children": [
        "/_protected/dashboard",
        "/_protected/dispute-resolution",
        "/_protected/job-post-management",
        "/_protected/payment-management",
        "/_protected/user-management",
        "/_protected/analytics-and-reporting/financial-reports",
        "/_protected/analytics-and-reporting/job-analytics",
        "/_protected/analytics-and-reporting/user-behavior",
        "/_protected/content-management/faqs",
        "/_protected/content-management/privacy-policy",
        "/_protected/content-management/terms-and-conditions",
        "/_protected/content-management/trust-and-safety",
        "/_protected/notification-management/notifications",
        "/_protected/notification-management/templates",
        "/_protected/settings/admin-activity",
        "/_protected/settings/admin-roles",
        "/_protected/settings/reviews",
        "/_protected/settings/subscription-settings"
      ]
    },
    "/(auth)/forgot-password": {
      "filePath": "(auth)/forgot-password.jsx"
    },
    "/(auth)/login": {
      "filePath": "(auth)/login.jsx"
    },
    "/_protected/dashboard": {
      "filePath": "_protected/dashboard.jsx",
      "parent": "/_protected"
    },
    "/_protected/dispute-resolution": {
      "filePath": "_protected/dispute-resolution.jsx",
      "parent": "/_protected"
    },
    "/_protected/job-post-management": {
      "filePath": "_protected/job-post-management.jsx",
      "parent": "/_protected"
    },
    "/_protected/payment-management": {
      "filePath": "_protected/payment-management.jsx",
      "parent": "/_protected"
    },
    "/_protected/user-management": {
      "filePath": "_protected/user-management.jsx",
      "parent": "/_protected"
    },
    "/_protected/analytics-and-reporting/financial-reports": {
      "filePath": "_protected/analytics-and-reporting/financial-reports.jsx",
      "parent": "/_protected"
    },
    "/_protected/analytics-and-reporting/job-analytics": {
      "filePath": "_protected/analytics-and-reporting/job-analytics.jsx",
      "parent": "/_protected"
    },
    "/_protected/analytics-and-reporting/user-behavior": {
      "filePath": "_protected/analytics-and-reporting/user-behavior.jsx",
      "parent": "/_protected"
    },
    "/_protected/content-management/faqs": {
      "filePath": "_protected/content-management/faqs.jsx",
      "parent": "/_protected"
    },
    "/_protected/content-management/privacy-policy": {
      "filePath": "_protected/content-management/privacy-policy.jsx",
      "parent": "/_protected"
    },
    "/_protected/content-management/terms-and-conditions": {
      "filePath": "_protected/content-management/terms-and-conditions.jsx",
      "parent": "/_protected"
    },
    "/_protected/content-management/trust-and-safety": {
      "filePath": "_protected/content-management/trust-and-safety.jsx",
      "parent": "/_protected"
    },
    "/_protected/notification-management/notifications": {
      "filePath": "_protected/notification-management/notifications.jsx",
      "parent": "/_protected"
    },
    "/_protected/notification-management/templates": {
      "filePath": "_protected/notification-management/templates.jsx",
      "parent": "/_protected"
    },
    "/_protected/settings/admin-activity": {
      "filePath": "_protected/settings/admin-activity.jsx",
      "parent": "/_protected"
    },
    "/_protected/settings/admin-roles": {
      "filePath": "_protected/settings/admin-roles.jsx",
      "parent": "/_protected"
    },
    "/_protected/settings/reviews": {
      "filePath": "_protected/settings/reviews.jsx",
      "parent": "/_protected"
    },
    "/_protected/settings/subscription-settings": {
      "filePath": "_protected/settings/subscription-settings.jsx",
      "parent": "/_protected"
    }
  }
}
ROUTE_MANIFEST_END */
